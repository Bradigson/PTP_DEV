@model DataLayer.Models.MenuApp.gn_menu

@{
    ViewBag.Title = "Edit";
}
<div class="container-fluid">
    <br />

    <div class="box box-warning">
        <div class="box-header with-border">
            <h3 class="box-title">Editar Menu</h3>
        </div>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="box-body">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.IDMenu)
                @Html.HiddenFor(x => x.IDEmpresa)
                <div class="row">
                    <div class="col-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Menu, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Menu, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Menu, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nivel, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Nivel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nivel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Orden, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Orden, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Orden, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.MenuIcon, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.MenuIcon, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MenuIcon, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.menupadre, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.menupadre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.menupadre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                </div>
            <!-- /.box-body -->
            <div class="box-footer">
                @Html.ActionLink("Regresar", "Index", null, htmlAttributes: new { @class = "btn btn-default" })
                <button type="submit" class="btn btn-info pull-right">Guradar</button>
            </div>
   
        }

     </div>
    </div>
